1. angularJs中模块之间如何通信


2. css 盒子模型


3. IE的盒子模型跟其他浏览器的区别


4. webpack打包很慢，如何改善


5. AMD规范和CommonJS规范有何区别

6. css 预编译用过什么

7. less 的特性

8. js中用过什么设计模式

9. 闭包的原理

10. 一个函数一般写多少行

11. 用过什么打包工具

12. 用过angularJs的哪些特性

13. 用过哪些js框架

14. 做过node开发吗

没有,
node 可以 引用模块 模拟出一个web 服务器


15. 用过npm吗
用过 , npm install <Module Name>  本地安装
npm install <Module Name> -g 全局安装


16. less 如何转换成 css
首先 需要在node环境下安装less 插件  使用 npm -install less -g 命令
之后 将你需要编译的 less 文件使用 一下命令 编译
lessc 文件名.less 文件名.css


17. H5用过哪些特性

1.全新的表单控件
email
url
number
range
Date pickers (date, month, week, time, datetime, datetime-local)
search
color
2.强大的绘图功能和多媒体功能
　1）canvas 可以动态地绘制各种效果精美的图形，结合js就能让网页图形动起来

　
　2）audio和 video 可以不依赖任何插件播放音频和视频


18. H5的存储有哪些

localStorage - 没有时间限制的数据存储
sessionStorage - 针对一个 session 的数据存储

19. localStorage和sessionStorage的区别

localStorage生命周期是永久，
这意味着除非用户显示在浏览器提供的UI上清除localStorage信息，
否则这些信息将永远存在。

sessionStorage对象存储特定于某个会话的数据，
也就是该数据只保持到浏览器关闭。
这个对象就像会话cookie，也会在浏览器关闭后消失。
存储在sessionStorage中的数据可以跨越页面刷新而存在，同时如果浏览器支持，
浏览器崩溃并重启之后依然可用（FireFox和WebKit都支持，IE不支持） 
因为sessionStorage对象绑定于某个服务器会话，
所以当文件在本地运行的时候是不可用的，
存储在sessionStorage中的数据只能由最初给对象存储数据的野蛮访问到，所以对多页面应用有限制。 
sessionStorage对象可以使用setItem()或者直接设置新的属性来存储数据


20. 用过什么模块管理工具


没有,Bower，Browserify，Component和Duo。它们各自都有鲜明的特点，
很好地弥补了Require.js的缺陷，是前端开发的利器。



21. 是不是在server上做开发

22. 前后端项目是怎么发布的

前端项目使用nodejs 进行 发布

后端项目则采用 web容器进行发布


23. css有几种定位方式

Static
这个是元素的默认定位方式，
元素出现在正常的文档流中，
会占用页面空间。
不能使用top，bottom，left，right和z-index。

Relative
相对定位方式，
相对于其父级元素（无论父级元素此时为何种定位方式）进行定位，
准确地说是相对于其父级元素所剩余的未被占用的空间进行定位（在父元素由多个相对定位的子元素时可以看出），
且会占用该元素在文档中初始的页面空间，即在使用top，bottom，left，right进行移动位置之后依旧不会改变其所占用空间的位置。
可以使用z-index进行在z轴方向上的移动。
Absolute
绝对定位方式，脱离文档流，不会占用页面空间。
以最近的不是static定位的父级元素作为参考进行定位，
如果其所有的父级元素都是static定位，
那么此元素最终则是以当前窗口作为参考进行定位。可以使用top，bottom，left，right进行位置移动，
亦可使用z-index在z轴上面进行移动。当元素为此定位时，如果该元素为内联元素，
则会变为块级元素，即可以直接设置其宽和高的值；
如果该元素为块级元素，则其宽度会由初始的100%变为auto。
注意：当元素设置为绝对定位时，在没有指定top，
bottom，left，right的值时，他们的值并不是0，这几个值是有默认值的，
默认值就是该元素设置为绝对定位前所处的正常文档流中的位置。（可能我没有描述的很清楚，建议自己写个示例看看效果）

Fixed
绝对定位方式，直接以浏览器窗口作为参考进行定位。其它特性同absolute定位

24. css中父元素清除子元素的浮动定位有哪几种方式

（1）在父div中在添加一个清除浮动的子div<div style=" clear:both;"></div>，该div不设置任何样式，只用来清除浮动

（2）在父div的css样式中设置overflow：hidden;zoom:1;

（3）设置父div也为浮动元素float：left；，这样设置的坏处是不能用margin：auto；实现居中

（4）设置父元素display:inline-block;，这样设置的坏处是不能用margin：auto；实现居中

（5）在父div中添加<br clear="both">子元素

（6）给父元素引用clearfix样式（未试过）

　　clearfix{

　　　　zoom:1;

　　}

　　clearfix:after{

　　　　content:"";

　　　　display:block;

　　　　claer:both;

　　}



25. js代码规范


1.1.变量

驼峰式命名法

1.2.函数
命名方法：小驼峰式命名法。

命名规范：前缀应当为动词。


1.3 常量
命名方法：名称全部大写。

命名规范：使用大写字母和下划线来组合命名，下划线用以分割单词。

1.4 构造函数
命名方法：大驼峰式命名法，首字母大写。

命名规范：前缀为名称。

命名建议：无。

1.5 类的成员
类的成员包含：

①公共属性和方法：跟变量和函数的命名一样。

② 私有属性和方法：前缀为_(下划线)，后面跟公共属性和方法一样的命名方式。

2.1 单行注释
说明：单行注释以两个斜线开始，以行尾结束。

语法：// 这是单行注释

使用方式：

① 单独一行：//(双斜线)与注释文字之间保留一个空格。

② 在代码后面添加注释：//(双斜线)与代码之间保留一个空格，并且//(双斜线)与注释文字之间保留一个空格。

③ 注释代码：//(双斜线)与代码之间保留一个空格。

2.2 多行注释
说明：以/*开头，*/结尾

语法：/* 注释说明 */

使用方法：

① 若开始(/*)和结束(*/)都在一行，推荐采用单行注释。

② 若至少三行注释时，第一行为/*，最后行为*/，其他行以*开始，并且注释文字与*保留一个空格。

2.3 函数(方法)注释
说明：函数(方法)注释也是多行注释的一种，但是包含了特殊的注释要求，参照 javadoc(百度百科)。

语法：

/** 
* 函数说明 
* @关键字 
*/
